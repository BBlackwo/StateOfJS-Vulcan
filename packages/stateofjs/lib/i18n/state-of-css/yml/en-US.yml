locale: en-US
translations:
  ###########################################################################
  # Sections
  ###########################################################################

  - key: sections.layout.title
    t: Layout
  - key: sections.layout.description
    t: How do you position elements on the screen?
  
  - key: sections.shapes_graphics.title
    t: Shapes & Graphics
  - key: sections.shapes_graphics.description
    t: Controlling the shape and display of elements.

  - key: sections.interactions.title
    t: Interactions
  - key: sections.interactions.description
    t: Controlling how the user interacts with the page.

  - key: sections.typography.title
    t: Typography
  - key: sections.typography.description
    t: Setting and laying out text.

  - key: sections.animations_transforms.title
    t: Animations & Transforms
  - key: sections.animations_transforms.description
    t: Animating and transforming elements.

  - key: sections.other_features.title
    t: Other Features
  - key: sections.other_features.description
    t: Other CSS features.

  - key: sections.units_selectors.title
    t: Units & Selectors
  - key: sections.units_selectors.description
    t: Test your knowledge of CSS units and selectors.

  - key: sections.pre_post_processors.title
    t: Pre-/Post-processors
  - key: sections.pre_post_processors.description
    t: Utilities that augment CSS.

  - key: sections.css_frameworks.title
    t: CSS Frameworks
  - key: sections.css_frameworks.description
    t: Libraries that give you pre-made components and styles.

  - key: sections.css_methodologies.title
    t: CSS Methodologies
  - key: sections.css_methodologies.description
    t: Codified ways to write cleaner CSS.

  - key: sections.css_in_js.title
    t: CSS-in-JS
  - key: sections.css_in_js.description
    t: Libraries that help integrate CSS into JavaScript code.

  - key: sections.other_tools.title
    t: Other Tools
  - key: sections.other_tools.description
    t: For these tools & technologies, just check the ones that you use regularly.

  - key: sections.environments.title
    t: Environments
  - key: sections.environments.description
    t: Which environments do you write CSS for?

  ###########################################################################
  # Features
  ###########################################################################

  # layout

  - key: features.grid
    t: CSS Grid
  - key: features.subgrid
    t: Subgrid
  - key: features.regions
    t: CSS Regions
  - key: features.flexbox
    t: Flexbox
  - key: features.multi_column
    t: CSS Multi-Column
  - key: features.writing_modes
    t: CSS Writing Modes
  - key: features.exclusions
    t: CSS Exclusions
  - key: features.position_sticky
    t: 'Position: sticky'
  - key: features.logical_properties
    t: Logical Properties
  - key: features.logical_properties.description
    t: margin-block-start, padding-inline-end, etc.
  - key: features.aspect_ratio
    t: aspect-ratio

  # shapes & graphics
  - key: features.shapes
    t: CSS Shapes
  - key: features.object_fit
    t: Object-fit
  - key: features.clip_path
    t: Clip-path
  - key: features.masks
    t: CSS Masks
  - key: features.blend_modes
    t: Blend Modes
  - key: features.blend_modes.description
    t: The mix-blend-mode property
  - key: features.filter_effects
    t: CSS Filter Effects

  # interactions
  - key: features.scroll_snap
    t: CSS Scroll Snap
  - key: features.overscroll_behavior
    t: Overscroll-behavior
  - key: features.overflow_anchor
    t: Overflow-anchor

  # typography
  - key: features.web_fonts
    t: Web fonts (@font-face)
  - key: features.variables_fonts
    t: Variable fonts
  - key: features.line_breaking
    t: Line breaking properties (overflow-wrap, word-break, line-break, hyphens)
  - key: features.font_variant
    t: Font-variant-*
  - key: features.initial_letter
    t: Initial-letter
  - key: features.font_variant_numeric
    t: font-variant-numeric
  - key: features.font_display
    t: font-display
  - key: features.line_clamp
    t: line-clamp

  # animations & transforms
  - key: features.transitions
    t: CSS Transitions
  - key: features.transforms
    t: CSS Transforms
  - key: features.animations
    t: CSS Animations
    
  # other features
  - key: features.variables
    t: CSS Variables
  - key: features.feature_support_queries
    t: Feature Support Queries (@supports)
  - key: features.containment
    t: CSS Containment
  - key: features.will_change
    t: Will-change
  - key: features.calc
    t: calc()
  - key: features.houdini
    t: Houdini
  - key: features.comparison_functions
    t: CSS Comparison Functions
  - key: features.comparison_functions.description
    t: min(), max(), and clamp()

  ###########################################################################
  # Opinions
  ###########################################################################

  - key: opinions.css_easy_to_learn
    t: CSS is easy to learn
    
  - key: opinions.css_evolving_slowly
    t: CSS is evolving too slowly
    
  - key: opinions.utility_classes_to_be_avoided
    t: Utility (non-semantic) classes (.center, .large-text, etc.) should be avoided
    
  - key: opinions.selector_nesting_to_be_avoided
    t: Selector nesting (.foo .bar ul li {...}) should be avoided
    
  - key: opinions.css_is_programming_language
    t: CSS is a programming language
    
  - key: opinions.enjoy_writing_css
    t: I enjoy writing CSS
    
  - key: opinions.currently_missing_from_css
    t: What do you feel is currently missing from CSS?
  - key: opinions.currently_missing_from_css.description
    t: Features you'd like to see in CSS one day.
    